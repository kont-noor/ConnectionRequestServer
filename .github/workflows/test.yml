---

name: Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Run Go Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: '**/go.sum'

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

      - name: Run tests with coverage
        run: go test ./... -v -race -coverprofile=coverage.out -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-report

  docker:
    name: Build and Push Docker Images
    needs: test
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tag
        id: vars
        run: echo "TAG=ghcr.io/${{ github.repository_owner }}/server:latest" >> $GITHUB_OUTPUT

      - name: Build and push server image
        run: |
          docker build -f Dockerfile -t ${{ steps.vars.outputs.TAG }} .
          docker push ${{ steps.vars.outputs.TAG }}

      - name: Build and push client image
        run: |
          docker build -f Dockerfile.client -t ${{ steps.vars.outputs.TAG }}-client .
          docker push ${{ steps.vars.outputs.TAG }}-client
